"""initial schema

Revision ID: 6afdc12ad3c0
Revises: 
Create Date: 2025-10-02 13:51:16.291265

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6afdc12ad3c0'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('availability_slots',
    sa.Column('id', sa.CHAR(length=36), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=False),
    sa.Column('is_booked', sa.Boolean(), server_default=sa.text('0'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.CheckConstraint('end_time > start_time', name='chk_slot_time_order'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('check_item_templates',
    sa.Column('id', sa.CHAR(length=36), nullable=False),
    sa.Column('code', sa.String(length=30), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.Column('ordinal', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.CheckConstraint('ordinal BETWEEN 1 AND 8', name='chk_template_ordinal_1_8'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code', name='uq_check_item_code'),
    sa.UniqueConstraint('ordinal', name='uq_check_item_ordinal')
    )
    op.create_table('users',
    sa.Column('id', sa.CHAR(length=36), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('email', sa.String(length=160), nullable=False),
    sa.Column('role', sa.Enum('CLIENT', 'INSPECTOR', 'ADMIN', name='userrole'), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('1'), nullable=False),
    sa.Column('last_login_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('inspectors',
    sa.Column('id', sa.CHAR(length=36), nullable=False),
    sa.Column('user_id', sa.CHAR(length=36), nullable=False),
    sa.Column('employee_id', sa.String(length=50), nullable=False),
    sa.Column('active', sa.Boolean(), server_default=sa.text('1'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], onupdate='CASCADE', ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('employee_id', name='uq_inspector_employee'),
    sa.UniqueConstraint('user_id', name='uq_inspector_user')
    )
    op.create_table('user_sessions',
    sa.Column('id', sa.CHAR(length=36), nullable=False),
    sa.Column('user_id', sa.CHAR(length=36), nullable=False),
    sa.Column('token', sa.String(length=500), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('revoked_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token', name='uq_session_token')
    )
    op.create_table('vehicles',
    sa.Column('id', sa.CHAR(length=36), nullable=False),
    sa.Column('plate_number', sa.String(length=20), nullable=False),
    sa.Column('make', sa.String(length=60), nullable=True),
    sa.Column('model', sa.String(length=60), nullable=True),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('owner_id', sa.CHAR(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], onupdate='CASCADE', ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('plate_number', name='uq_vehicles_plate')
    )
    op.create_table('annual_inspections',
    sa.Column('id', sa.CHAR(length=36), nullable=False),
    sa.Column('vehicle_id', sa.CHAR(length=36), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'IN_PROGRESS', 'PASSED', 'FAILED', name='annualstatus'), server_default=sa.text("'PENDING'"), nullable=False),
    sa.Column('attempt_count', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('current_result_id', sa.CHAR(length=36), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['current_result_id'], ['inspection_results.id'], name='fk_annual_current_result', onupdate='CASCADE', ondelete='SET NULL', use_alter=True),
    sa.ForeignKeyConstraint(['vehicle_id'], ['vehicles.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('vehicle_id', 'year', name='uq_annual_vehicle_year')
    )
    op.create_table('appointments',
    sa.Column('id', sa.CHAR(length=36), nullable=False),
    sa.Column('annual_inspection_id', sa.CHAR(length=36), nullable=False),
    sa.Column('vehicle_id', sa.CHAR(length=36), nullable=False),
    sa.Column('inspector_id', sa.CHAR(length=36), nullable=True),
    sa.Column('created_by_user_id', sa.CHAR(length=36), nullable=False),
    sa.Column('created_channel', sa.Enum('CLIENT_PORTAL', 'ADMIN_PANEL', name='createdchannel'), nullable=False),
    sa.Column('date_time', sa.DateTime(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'CONFIRMED', 'COMPLETED', 'CANCELLED', name='appointmentstatus'), server_default=sa.text("'PENDING'"), nullable=False),
    sa.Column('confirmation_token', sa.String(length=64), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['annual_inspection_id'], ['annual_inspections.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], onupdate='CASCADE', ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['inspector_id'], ['inspectors.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['vehicle_id'], ['vehicles.id'], onupdate='CASCADE', ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('inspection_results',
    sa.Column('id', sa.CHAR(length=36), nullable=False),
    sa.Column('annual_inspection_id', sa.CHAR(length=36), nullable=False),
    sa.Column('appointment_id', sa.CHAR(length=36), nullable=False),
    sa.Column('total_score', sa.Integer(), nullable=False),
    sa.Column('owner_observation', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.CheckConstraint('total_score BETWEEN 0 AND 80', name='chk_total_score_0_80'),
    sa.ForeignKeyConstraint(['annual_inspection_id'], ['annual_inspections.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['appointment_id'], ['appointments.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('appointment_id'),
    sa.UniqueConstraint('appointment_id', name='uq_results_appointment')
    )
    op.create_table('item_checks',
    sa.Column('id', sa.CHAR(length=36), nullable=False),
    sa.Column('inspection_result_id', sa.CHAR(length=36), nullable=False),
    sa.Column('check_item_template_id', sa.CHAR(length=36), nullable=False),
    sa.Column('score', sa.Integer(), nullable=False),
    sa.Column('observation', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.CheckConstraint('score BETWEEN 1 AND 10', name='chk_item_score_1_10'),
    sa.ForeignKeyConstraint(['check_item_template_id'], ['check_item_templates.id'], onupdate='CASCADE', ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['inspection_result_id'], ['inspection_results.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('inspection_result_id', 'check_item_template_id', name='uq_item_per_result')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('item_checks')
    op.drop_table('inspection_results')
    op.drop_table('appointments')
    op.drop_table('annual_inspections')
    op.drop_table('vehicles')
    op.drop_table('user_sessions')
    op.drop_table('inspectors')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('check_item_templates')
    op.drop_table('availability_slots')
    # ### end Alembic commands ###
